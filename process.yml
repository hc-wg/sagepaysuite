# Orb 'pruebas/ebizmarts-sagepay@0.0.5' resolved to 'pruebas/ebizmarts-sagepay@0.0.5'
version: 2
jobs:
  PHP 73 Compile and API test:
    docker:
    - image: ebizmarts/magento2-php73:0.0.4
    - image: circleci/mysql:5.6
      environment:
        MYSQL_USER: magento
        MYSQL_PASSWORD: magento
        MYSQL_ROOT_PASSWORD: root
        MYSQL_DATABASE: circle_test
        MYSQL_ALLOW_EMPTY_PASSWORD: true
    working_directory: ~/
    steps:
    - attach_workspace:
        at: ~/magento2
    - run:
        command: sudo sh -c 'echo "199.188.207.57 test.sagepay.com pi-test.sagepay.com" >> /etc/hosts'
    - add_ssh_keys:
        fingerprints:
        - 8e:f3:59:42:50:dd:3a:89:3b:25:e2:73:cf:4c:e4:b3
    - run:
        command: sudo -E sh -c 'echo "memory_limit = 1G" > /usr/local/etc/php/conf.d/memory.ini'
    - run:
        command: wget https://download.libsodium.org/libsodium/releases/libsodium-1.0.18.tar.gz
    - run:
        command: tar xvzf libsodium-1.0.18.tar.gz
    - run:
        command: cd libsodium-1.0.18/ && ./configure
    - run:
        command: cd libsodium-1.0.18/ && make && make check
    - run:
        command: cd libsodium-1.0.18/ && sudo make install
    - run:
        command: sudo apt-get update
    - run:
        name: Install libraries
        command: sudo -E apt-get install -y g++ libicu-dev libjpeg-dev libmcrypt-dev libpng-dev libwebp-dev libxml2-dev libxpm-dev libxslt-dev libz-dev libzip-dev zlib1g-dev
    - run:
        name: Configure PHP extensions
        command: sudo -E docker-php-ext-configure intl && sudo -E docker-php-ext-configure gd --with-png-dir=/usr/include --with-jpeg-dir=/usr/include
    - run:
        command: sudo apt-get -y install gcc make autoconf libc-dev pkg-config
    - run:
        command: sudo apt-get -y install libmcrypt-dev
    - run:
        command: sudo pecl install mcrypt-1.0.2
    - run:
        name: Install PHP extensions
        command: sudo -E docker-php-ext-install bcmath gd intl opcache pdo_mysql soap xsl zip
    - run:
        command: sudo apt-get install -y mariadb-client
    - run:
        command: sudo apt-cache search rabbit
    - run:
        command: sudo apt install -y rabbitmq-server
    - run:
        command: sudo apt-get install -y librabbitmq4
    - run:
        command: echo 127.0.0.1 magento2.dev | sudo tee -a /etc/hosts
    - run:
        command: wget https://gist.githubusercontent.com/bcerban/25f3a2d93c19dc562020e0197f78685c/raw/70f1f314ad8ba5d302b911fe622a57ccec60a868/magento2.conf
    - run:
        command: sudo cp magento2.conf /etc/apache2/sites-available/ && sudo a2ensite magento2.conf
    - run:
        command: sudo sed -i 's/www-data/circleci/g' /etc/apache2/envvars
    - run:
        command: sudo service apache2 restart
    - run:
        command: rm -rf ~/magento2/*
    - run:
        command: wget --quiet https://ebizmartsbackup.s3.amazonaws.com/magento-ee-2.3.5-p1.zip && mv magento-ee-2.3.5-p1.zip ~/magento2/
    - run:
        command: sudo apt-get -y install unzip
    - run:
        command: cd ~/magento2 && unzip -qq magento-ee-2.3.5-p1.zip
    - run:
        command: cd ~/magento2 && rm magento-ee-2.3.5-p1.zip
    - run:
        command: docker-php-ext-install sockets
    - run:
        command: composer remove container-interop/container-interop
    - run:
        command: composer require psr/container
    - run:
        command: cd ~/magento2 && composer install --prefer-source --no-interaction
    - run:
        command: cd ~/magento2 && bin/magento setup:install --base-url=http://magento2.dev:8080/ --db-host=127.0.0.1 --db-name=circle_test --db-user=magento --db-password=magento --admin-firstname=Magento --admin-lastname=User --admin-email=user@example.com --admin-user=admin --admin-password=admin123 --language=en_US --currency=USD --timezone=America/Chicago --use-rewrites=1 --cleanup-database --use-sample-data
    - run:
        name: Run Magento DI Compile.
        command: cd $MAGENTO_PATH && bin/magento setup:di:compile -q
    - run:
        name: Run Magento Setup Upgrade.
        command: cd $MAGENTO_PATH && bin/magento setup:upgrade -q
    - run:
        name: Set write permissions on var directory.
        command: chmod -R 777 $MAGENTO_PATH/var
    - run:
        name: Run Magento Cache Flush.
        command: $MAGENTO_PATH/bin/magento cache:flush -q
    - run:
        name: Disable Magento's cache.
        command: $MAGENTO_PATH/bin/magento cache:disable -q
    - run:
        command: sudo apt-get update
    - run:
        command: sudo apt-get install -qq -y mariadb-client
    - run:
        name: Add magento2.dev to hosts file.
        command: echo 127.0.0.1 magento2.dev | sudo tee -a /etc/hosts
    - run:
        name: Download Magento 2 web server configuration file.
        command: wget --quiet $MAGENTO_WEB_SERVER_CONF
    - run:
        name: Copy Magento 2 web server configuration file.
        command: sudo cp magento2.conf /etc/apache2/sites-available/ && sudo a2ensite magento2.conf
    - run:
        name: Run sed on apache environment vars.
        command: sudo sed -i 's/www-data/circleci/g' /etc/apache2/envvars
    - run:
        name: Restart apache.
        command: sudo service apache2 restart
    - run:
        name: Import database dump.
        command: mysql -h 127.0.0.1 -umagento -pmagento circle_test < ~/magento2/circle_test.sql
    - run:
        name: Run Magento DI Compile.
        command: cd $MAGENTO_PATH && bin/magento setup:di:compile -q
    - run:
        name: Run Magento Setup Upgrade.
        command: cd $MAGENTO_PATH && bin/magento setup:upgrade -q
    - run:
        name: Set write permissions on var directory.
        command: chmod -R 777 $MAGENTO_PATH/var
    - run:
        name: Run Magento Cache Flush.
        command: $MAGENTO_PATH/bin/magento cache:flush -q
    - run:
        name: Disable Magento's cache.
        command: $MAGENTO_PATH/bin/magento cache:disable -q
    - run:
        name: Run API functional tests.
        command: $MAGENTO_PATH/phpunit-$PHP_UNIT_VERSION.phar -c $MAGENTO_PATH/dev/tests/api-functional/phpunit.xml
    environment:
    - PHP_UNIT_VERSION: 6.2
    - SNIFFER_SEVERITY: 10
    - SNIFFER_VERSION: v5
    - MAGENTO_PATH: /home/circleci/magento2
    - MAGENTO_VERSION: 232EE
    - MAGENTO_VERSION_233: 233EE
    - MAGENTO_WEB_SERVER_CONF: https://gist.githubusercontent.com/bcerban/25f3a2d93c19dc562020e0197f78685c/raw/70f1f314ad8ba5d302b911fe622a57ccec60a868/magento2.conf
    - MAGENTO_COMPOSER_AUTH: https://gist.githubusercontent.com/centerax/5e42abec89d62a1308ba/raw/4b3242361c0690e234266afb3520c2940ac1055a/auth.json
    - LIBSODIUM_VERSION: 1.0.18
    - MYSQL_HOST: 127.0.0.1
    - MYSQL_DATABASE: circle_test
    - MYSQL_USER: magento
    - MYSQL_PASSWORD: magento
    - MYSQL_ALLOW_EMPTY_PASSWORD: true
  DownloadTools232EE:
    docker:
    - image: circleci/php:7.1
    working_directory: ~/
    steps:
    - run:
        name: Download Magento from ebizmartsbackup S3.
        command: wget --quiet https://ebizmartsbackup.s3.amazonaws.com/Magento$MAGENTO_VERSION-PreCompiled-NoSampleData.tar.gz
    - run:
        name: Rename file to use download-tools
        command: mv Magento$MAGENTO_VERSION-PreCompiled-NoSampleData.tar.gz Magento$MAGENTO_VERSION-PreCompiled.tar.gz
    - run:
        name: Download PHP Unit.
        command: wget --quiet https://phar.phpunit.de/phpunit-$PHP_UNIT_VERSION.phar && chmod +x phpunit-$PHP_UNIT_VERSION.phar
    - run:
        name: Decompress Magento.
        command: tar xpf Magento$MAGENTO_VERSION-PreCompiled.tar.gz
    - run:
        name: Move Magento files.
        command: mv magento2/* .
    - run:
        name: Delete tar.
        command: rm Magento$MAGENTO_VERSION-PreCompiled.tar.gz
    - run:
        name: Delete old code.
        command: rm -rf app/code/Ebizmarts
    - run:
        name: Download magento Composer auth.json file.
        command: wget --quiet $MAGENTO_COMPOSER_AUTH
    - run:
        name: Set bin/magento as executable.
        command: chmod +x bin/magento
    - checkout:
        path: app/code/Ebizmarts/SagePaySuite
    - run:
        name: Copy Api test data files to folder.
        command: mkdir -p dev/tests/integration/testsuite/Ebizmarts/SagePaySuite/_files && cp -r app/code/Ebizmarts/SagePaySuite/Test/Api/_files/* dev/tests/integration/testsuite/Ebizmarts/SagePaySuite/_files
    - run:
        name: Copy php unit config file.
        command: cp app/code/Ebizmarts/SagePaySuite/phpunit_config.xml dev/tests/unit/phpunit.xml
    - run:
        name: Copy integration tests config file.
        command: cp app/code/Ebizmarts/SagePaySuite/phpunit_config_integration.xml dev/tests/integration/phpunit.xml
    - run:
        name: Copy api functional config file.
        command: cp app/code/Ebizmarts/SagePaySuite/phpunit_config_functional.xml dev/tests/api-functional/phpunit.xml
    - persist_to_workspace:
        root: /home/circleci
        paths:
        - ./
    environment:
    - PHP_UNIT_VERSION: 6.2
    - SNIFFER_SEVERITY: 10
    - SNIFFER_VERSION: v5
    - MAGENTO_PATH: /home/circleci/magento2
    - MAGENTO_VERSION: 232EE
    - MAGENTO_VERSION_233: 233EE
    - MAGENTO_WEB_SERVER_CONF: https://gist.githubusercontent.com/bcerban/25f3a2d93c19dc562020e0197f78685c/raw/70f1f314ad8ba5d302b911fe622a57ccec60a868/magento2.conf
    - MAGENTO_COMPOSER_AUTH: https://gist.githubusercontent.com/centerax/5e42abec89d62a1308ba/raw/4b3242361c0690e234266afb3520c2940ac1055a/auth.json
    - LIBSODIUM_VERSION: 1.0.18
    - MYSQL_HOST: 127.0.0.1
    - MYSQL_DATABASE: circle_test
    - MYSQL_USER: magento
    - MYSQL_PASSWORD: magento
    - MYSQL_ALLOW_EMPTY_PASSWORD: true
  PHP 72 Compile and API test:
    docker:
    - image: ebizmarts/magento2-php72:0.0.2
    - image: circleci/mysql:5.6
      environment:
        MYSQL_USER: magento
        MYSQL_PASSWORD: magento
        MYSQL_ROOT_PASSWORD: root
        MYSQL_DATABASE: circle_test
        MYSQL_ALLOW_EMPTY_PASSWORD: true
    working_directory: ~/
    steps:
    - attach_workspace:
        at: ~/magento2
    - run:
        command: sudo sh -c 'echo "199.188.207.57 test.sagepay.com pi-test.sagepay.com" >> /etc/hosts'
    - run:
        command: sudo apt-get update
    - run:
        command: sudo apt-get install -qq -y mariadb-client
    - run:
        name: Add magento2.dev to hosts file.
        command: echo 127.0.0.1 magento2.dev | sudo tee -a /etc/hosts
    - run:
        name: Download Magento 2 web server configuration file.
        command: wget --quiet $MAGENTO_WEB_SERVER_CONF
    - run:
        name: Copy Magento 2 web server configuration file.
        command: sudo cp magento2.conf /etc/apache2/sites-available/ && sudo a2ensite magento2.conf
    - run:
        name: Run sed on apache environment vars.
        command: sudo sed -i 's/www-data/circleci/g' /etc/apache2/envvars
    - run:
        name: Restart apache.
        command: sudo service apache2 restart
    - run:
        name: Import database dump.
        command: mysql -h 127.0.0.1 -umagento -pmagento circle_test < ~/magento2/circle_test.sql
    - run:
        name: Run Magento DI Compile.
        command: cd $MAGENTO_PATH && bin/magento setup:di:compile -q
    - run:
        name: Run Magento Setup Upgrade.
        command: cd $MAGENTO_PATH && bin/magento setup:upgrade -q
    - run:
        name: Set write permissions on var directory.
        command: chmod -R 777 $MAGENTO_PATH/var
    - run:
        name: Run Magento Cache Flush.
        command: $MAGENTO_PATH/bin/magento cache:flush -q
    - run:
        name: Disable Magento's cache.
        command: $MAGENTO_PATH/bin/magento cache:disable -q
    - run:
        name: Run API functional tests.
        command: $MAGENTO_PATH/phpunit-$PHP_UNIT_VERSION.phar -c $MAGENTO_PATH/dev/tests/api-functional/phpunit.xml
    environment:
    - PHP_UNIT_VERSION: 6.2
    - SNIFFER_SEVERITY: 10
    - SNIFFER_VERSION: v5
    - MAGENTO_PATH: /home/circleci/magento2
    - MAGENTO_VERSION: 232EE
    - MAGENTO_VERSION_233: 233EE
    - MAGENTO_WEB_SERVER_CONF: https://gist.githubusercontent.com/bcerban/25f3a2d93c19dc562020e0197f78685c/raw/70f1f314ad8ba5d302b911fe622a57ccec60a868/magento2.conf
    - MAGENTO_COMPOSER_AUTH: https://gist.githubusercontent.com/centerax/5e42abec89d62a1308ba/raw/4b3242361c0690e234266afb3520c2940ac1055a/auth.json
    - LIBSODIUM_VERSION: 1.0.18
    - MYSQL_HOST: 127.0.0.1
    - MYSQL_DATABASE: circle_test
    - MYSQL_USER: magento
    - MYSQL_PASSWORD: magento
    - MYSQL_ALLOW_EMPTY_PASSWORD: true
  PHP 71 Unit Tests:
    docker:
    - image: circleci/php:7.1-apache
    working_directory: ~/
    steps:
    - attach_workspace:
        at: ~/magento2
    - run:
        name: Run unit tests.
        command: '$MAGENTO_PATH/phpunit-$PHP_UNIT_VERSION.phar -c $MAGENTO_PATH/dev/tests/unit/phpunit.xml '
    environment:
    - PHP_UNIT_VERSION: 6.2
    - SNIFFER_SEVERITY: 10
    - SNIFFER_VERSION: v5
    - MAGENTO_PATH: /home/circleci/magento2
    - MAGENTO_VERSION: 232EE
    - MAGENTO_VERSION_233: 233EE
    - MAGENTO_WEB_SERVER_CONF: https://gist.githubusercontent.com/bcerban/25f3a2d93c19dc562020e0197f78685c/raw/70f1f314ad8ba5d302b911fe622a57ccec60a868/magento2.conf
    - MAGENTO_COMPOSER_AUTH: https://gist.githubusercontent.com/centerax/5e42abec89d62a1308ba/raw/4b3242361c0690e234266afb3520c2940ac1055a/auth.json
    - LIBSODIUM_VERSION: 1.0.18
    - MYSQL_HOST: 127.0.0.1
    - MYSQL_DATABASE: circle_test
    - MYSQL_USER: magento
    - MYSQL_PASSWORD: magento
    - MYSQL_ALLOW_EMPTY_PASSWORD: true
  DownloadTools233EE:
    docker:
    - image: circleci/php:7.1
    working_directory: ~/
    steps:
    - run:
        name: Download Magento from ebizmartsbackup S3.
        command: wget --quiet https://ebizmartsbackup.s3.amazonaws.com/Magento$MAGENTO_VERSION_233-PreCompiled-NoSampleData.tar.gz
    - run:
        name: Rename file to use download-tools
        command: mv Magento$MAGENTO_VERSION_233-PreCompiled-NoSampleData.tar.gz Magento$MAGENTO_VERSION_233-PreCompiled.tar.gz
    - run:
        name: Download PHP Unit.
        command: wget --quiet https://phar.phpunit.de/phpunit-$PHP_UNIT_VERSION.phar && chmod +x phpunit-$PHP_UNIT_VERSION.phar
    - run:
        name: Decompress Magento.
        command: tar xpf Magento$MAGENTO_VERSION_233-PreCompiled.tar.gz
    - run:
        name: Move Magento files.
        command: mv magento2/* .
    - run:
        name: Delete tar.
        command: rm Magento$MAGENTO_VERSION_233-PreCompiled.tar.gz
    - run:
        name: Delete old code.
        command: rm -rf app/code/Ebizmarts
    - run:
        name: Download magento Composer auth.json file.
        command: wget --quiet $MAGENTO_COMPOSER_AUTH
    - run:
        name: Set bin/magento as executable.
        command: chmod +x bin/magento
    - checkout:
        path: app/code/Ebizmarts/SagePaySuite
    - run:
        name: Copy Api test data files to folder.
        command: mkdir -p dev/tests/integration/testsuite/Ebizmarts/SagePaySuite/_files && cp -r app/code/Ebizmarts/SagePaySuite/Test/Api/_files/* dev/tests/integration/testsuite/Ebizmarts/SagePaySuite/_files
    - run:
        name: Copy php unit config file.
        command: cp app/code/Ebizmarts/SagePaySuite/phpunit_config.xml dev/tests/unit/phpunit.xml
    - run:
        name: Copy integration tests config file.
        command: cp app/code/Ebizmarts/SagePaySuite/phpunit_config_integration.xml dev/tests/integration/phpunit.xml
    - run:
        name: Copy api functional config file.
        command: cp app/code/Ebizmarts/SagePaySuite/phpunit_config_functional.xml dev/tests/api-functional/phpunit.xml
    - persist_to_workspace:
        root: /home/circleci
        paths:
        - ./
    environment:
    - PHP_UNIT_VERSION: 6.2
    - SNIFFER_SEVERITY: 10
    - SNIFFER_VERSION: v5
    - MAGENTO_PATH: /home/circleci/magento2
    - MAGENTO_VERSION: 232EE
    - MAGENTO_VERSION_233: 233EE
    - MAGENTO_WEB_SERVER_CONF: https://gist.githubusercontent.com/bcerban/25f3a2d93c19dc562020e0197f78685c/raw/70f1f314ad8ba5d302b911fe622a57ccec60a868/magento2.conf
    - MAGENTO_COMPOSER_AUTH: https://gist.githubusercontent.com/centerax/5e42abec89d62a1308ba/raw/4b3242361c0690e234266afb3520c2940ac1055a/auth.json
    - LIBSODIUM_VERSION: 1.0.18
    - MYSQL_HOST: 127.0.0.1
    - MYSQL_DATABASE: circle_test
    - MYSQL_USER: magento
    - MYSQL_PASSWORD: magento
    - MYSQL_ALLOW_EMPTY_PASSWORD: true
  PHP 72 Code Sniffer:
    docker:
    - image: circleci/php:7.2-apache
    working_directory: ~/
    steps:
    - attach_workspace:
        at: ~/magento2
    - run:
        name: Check PHP version.
        command: php -v
    - run:
        name: Composer require PHPCS and Magento coding standard.
        command: composer require --no-progress --prefer-dist --dev squizlabs/php_codesniffer:3.x-dev magento/magento-coding-standard=$SNIFFER_VERSION
    - run:
        name: Set installed config paths.
        command: vendor/bin/phpcs --config-set installed_paths ../../magento/magento-coding-standard/
    - run:
        name: Run PHPCS
        command: vendor/bin/phpcs --standard=Magento2,PSR1,PSR2 $MAGENTO_PATH/app/code/Ebizmarts/* --extensions=php,phtml --warning-severity=$SNIFFER_SEVERITY --ignore=".circleci/config.yml,*.xml"
    environment:
    - PHP_UNIT_VERSION: 6.2
    - SNIFFER_SEVERITY: 10
    - SNIFFER_VERSION: v5
    - MAGENTO_PATH: /home/circleci/magento2
    - MAGENTO_VERSION: 232EE
    - MAGENTO_VERSION_233: 233EE
    - MAGENTO_WEB_SERVER_CONF: https://gist.githubusercontent.com/bcerban/25f3a2d93c19dc562020e0197f78685c/raw/70f1f314ad8ba5d302b911fe622a57ccec60a868/magento2.conf
    - MAGENTO_COMPOSER_AUTH: https://gist.githubusercontent.com/centerax/5e42abec89d62a1308ba/raw/4b3242361c0690e234266afb3520c2940ac1055a/auth.json
    - LIBSODIUM_VERSION: 1.0.18
    - MYSQL_HOST: 127.0.0.1
    - MYSQL_DATABASE: circle_test
    - MYSQL_USER: magento
    - MYSQL_PASSWORD: magento
    - MYSQL_ALLOW_EMPTY_PASSWORD: true
  PHP 73 Unit Tests:
    docker:
    - image: circleci/php:7.3.9-apache-stretch
    working_directory: ~/
    steps:
    - attach_workspace:
        at: ~/magento2
    - run:
        name: Run unit tests.
        command: '$MAGENTO_PATH/phpunit-$PHP_UNIT_VERSION.phar -c $MAGENTO_PATH/dev/tests/unit/phpunit.xml '
    environment:
    - PHP_UNIT_VERSION: 6.2
    - SNIFFER_SEVERITY: 10
    - SNIFFER_VERSION: v5
    - MAGENTO_PATH: /home/circleci/magento2
    - MAGENTO_VERSION: 232EE
    - MAGENTO_VERSION_233: 233EE
    - MAGENTO_WEB_SERVER_CONF: https://gist.githubusercontent.com/bcerban/25f3a2d93c19dc562020e0197f78685c/raw/70f1f314ad8ba5d302b911fe622a57ccec60a868/magento2.conf
    - MAGENTO_COMPOSER_AUTH: https://gist.githubusercontent.com/centerax/5e42abec89d62a1308ba/raw/4b3242361c0690e234266afb3520c2940ac1055a/auth.json
    - LIBSODIUM_VERSION: 1.0.18
    - MYSQL_HOST: 127.0.0.1
    - MYSQL_DATABASE: circle_test
    - MYSQL_USER: magento
    - MYSQL_PASSWORD: magento
    - MYSQL_ALLOW_EMPTY_PASSWORD: true
  PHP 71 unit tests with coverage:
    docker:
    - image: circleci/php:7.1-apache
    working_directory: ~/
    steps:
    - attach_workspace:
        at: ~/magento2
    - run:
        name: Run unit tests.
        command: $MAGENTO_PATH/phpunit-$PHP_UNIT_VERSION.phar -c $MAGENTO_PATH/dev/tests/unit/phpunit.xml --coverage-text
    environment:
    - PHP_UNIT_VERSION: 6.2
    - SNIFFER_SEVERITY: 10
    - SNIFFER_VERSION: v5
    - MAGENTO_PATH: /home/circleci/magento2
    - MAGENTO_VERSION: 232EE
    - MAGENTO_VERSION_233: 233EE
    - MAGENTO_WEB_SERVER_CONF: https://gist.githubusercontent.com/bcerban/25f3a2d93c19dc562020e0197f78685c/raw/70f1f314ad8ba5d302b911fe622a57ccec60a868/magento2.conf
    - MAGENTO_COMPOSER_AUTH: https://gist.githubusercontent.com/centerax/5e42abec89d62a1308ba/raw/4b3242361c0690e234266afb3520c2940ac1055a/auth.json
    - LIBSODIUM_VERSION: 1.0.18
    - MYSQL_HOST: 127.0.0.1
    - MYSQL_DATABASE: circle_test
    - MYSQL_USER: magento
    - MYSQL_PASSWORD: magento
    - MYSQL_ALLOW_EMPTY_PASSWORD: true
  PHP 71 Compile and API test:
    docker:
    - image: ebizmarts/magento2-php71:0.0.1
    - image: circleci/mysql:5.6
      environment:
        MYSQL_USER: magento
        MYSQL_PASSWORD: magento
        MYSQL_ROOT_PASSWORD: root
        MYSQL_DATABASE: circle_test
        MYSQL_ALLOW_EMPTY_PASSWORD: true
    working_directory: ~/
    steps:
    - attach_workspace:
        at: ~/magento2
    - run:
        command: sudo sh -c 'echo "199.188.207.57 test.sagepay.com pi-test.sagepay.com" >> /etc/hosts'
    - run:
        command: sudo apt-get update
    - run:
        command: sudo apt-get install -qq -y mariadb-client
    - run:
        name: Add magento2.dev to hosts file.
        command: echo 127.0.0.1 magento2.dev | sudo tee -a /etc/hosts
    - run:
        name: Download Magento 2 web server configuration file.
        command: wget --quiet $MAGENTO_WEB_SERVER_CONF
    - run:
        name: Copy Magento 2 web server configuration file.
        command: sudo cp magento2.conf /etc/apache2/sites-available/ && sudo a2ensite magento2.conf
    - run:
        name: Run sed on apache environment vars.
        command: sudo sed -i 's/www-data/circleci/g' /etc/apache2/envvars
    - run:
        name: Restart apache.
        command: sudo service apache2 restart
    - run:
        name: Import database dump.
        command: mysql -h 127.0.0.1 -umagento -pmagento circle_test < ~/magento2/circle_test.sql
    - run:
        name: Run Magento DI Compile.
        command: cd $MAGENTO_PATH && bin/magento setup:di:compile -q
    - run:
        name: Run Magento Setup Upgrade.
        command: cd $MAGENTO_PATH && bin/magento setup:upgrade -q
    - run:
        name: Set write permissions on var directory.
        command: chmod -R 777 $MAGENTO_PATH/var
    - run:
        name: Run Magento Cache Flush.
        command: $MAGENTO_PATH/bin/magento cache:flush -q
    - run:
        name: Disable Magento's cache.
        command: $MAGENTO_PATH/bin/magento cache:disable -q
    - run:
        name: Run API functional tests.
        command: $MAGENTO_PATH/phpunit-$PHP_UNIT_VERSION.phar -c $MAGENTO_PATH/dev/tests/api-functional/phpunit.xml
    environment:
    - PHP_UNIT_VERSION: 6.2
    - SNIFFER_SEVERITY: 10
    - SNIFFER_VERSION: v5
    - MAGENTO_PATH: /home/circleci/magento2
    - MAGENTO_VERSION: 232EE
    - MAGENTO_VERSION_233: 233EE
    - MAGENTO_WEB_SERVER_CONF: https://gist.githubusercontent.com/bcerban/25f3a2d93c19dc562020e0197f78685c/raw/70f1f314ad8ba5d302b911fe622a57ccec60a868/magento2.conf
    - MAGENTO_COMPOSER_AUTH: https://gist.githubusercontent.com/centerax/5e42abec89d62a1308ba/raw/4b3242361c0690e234266afb3520c2940ac1055a/auth.json
    - LIBSODIUM_VERSION: 1.0.18
    - MYSQL_HOST: 127.0.0.1
    - MYSQL_DATABASE: circle_test
    - MYSQL_USER: magento
    - MYSQL_PASSWORD: magento
    - MYSQL_ALLOW_EMPTY_PASSWORD: true
  PHP 71 Code Sniffer:
    docker:
    - image: circleci/php:7.1-apache
    working_directory: ~/
    steps:
    - attach_workspace:
        at: ~/magento2
    - run:
        name: Check PHP version.
        command: php -v
    - run:
        name: Composer require PHPCS and Magento coding standard.
        command: composer require --no-progress --prefer-dist --dev squizlabs/php_codesniffer:3.x-dev magento/magento-coding-standard=$SNIFFER_VERSION
    - run:
        name: Set installed config paths.
        command: vendor/bin/phpcs --config-set installed_paths ../../magento/magento-coding-standard/
    - run:
        name: Run PHPCS
        command: vendor/bin/phpcs --standard=Magento2,PSR1,PSR2 $MAGENTO_PATH/app/code/Ebizmarts/* --extensions=php,phtml --warning-severity=$SNIFFER_SEVERITY --ignore=".circleci/config.yml,*.xml"
    environment:
    - PHP_UNIT_VERSION: 6.2
    - SNIFFER_SEVERITY: 10
    - SNIFFER_VERSION: v5
    - MAGENTO_PATH: /home/circleci/magento2
    - MAGENTO_VERSION: 232EE
    - MAGENTO_VERSION_233: 233EE
    - MAGENTO_WEB_SERVER_CONF: https://gist.githubusercontent.com/bcerban/25f3a2d93c19dc562020e0197f78685c/raw/70f1f314ad8ba5d302b911fe622a57ccec60a868/magento2.conf
    - MAGENTO_COMPOSER_AUTH: https://gist.githubusercontent.com/centerax/5e42abec89d62a1308ba/raw/4b3242361c0690e234266afb3520c2940ac1055a/auth.json
    - LIBSODIUM_VERSION: 1.0.18
    - MYSQL_HOST: 127.0.0.1
    - MYSQL_DATABASE: circle_test
    - MYSQL_USER: magento
    - MYSQL_PASSWORD: magento
    - MYSQL_ALLOW_EMPTY_PASSWORD: true
  PHP 73 Code Sniffer:
    docker:
    - image: circleci/php:7.3.9-apache-stretch
    working_directory: ~/
    steps:
    - attach_workspace:
        at: ~/magento2
    - run:
        name: Check PHP version.
        command: php -v
    - run:
        name: Composer require PHPCS and Magento coding standard.
        command: composer require --no-progress --prefer-dist --dev squizlabs/php_codesniffer:3.x-dev magento/magento-coding-standard=$SNIFFER_VERSION
    - run:
        name: Set installed config paths.
        command: vendor/bin/phpcs --config-set installed_paths ../../magento/magento-coding-standard/
    - run:
        name: Run PHPCS
        command: vendor/bin/phpcs --standard=Magento2,PSR1,PSR2 $MAGENTO_PATH/app/code/Ebizmarts/* --extensions=php,phtml --warning-severity=$SNIFFER_SEVERITY --ignore=".circleci/config.yml,*.xml"
    environment:
    - PHP_UNIT_VERSION: 6.2
    - SNIFFER_SEVERITY: 10
    - SNIFFER_VERSION: v5
    - MAGENTO_PATH: /home/circleci/magento2
    - MAGENTO_VERSION: 232EE
    - MAGENTO_VERSION_233: 233EE
    - MAGENTO_WEB_SERVER_CONF: https://gist.githubusercontent.com/bcerban/25f3a2d93c19dc562020e0197f78685c/raw/70f1f314ad8ba5d302b911fe622a57ccec60a868/magento2.conf
    - MAGENTO_COMPOSER_AUTH: https://gist.githubusercontent.com/centerax/5e42abec89d62a1308ba/raw/4b3242361c0690e234266afb3520c2940ac1055a/auth.json
    - LIBSODIUM_VERSION: 1.0.18
    - MYSQL_HOST: 127.0.0.1
    - MYSQL_DATABASE: circle_test
    - MYSQL_USER: magento
    - MYSQL_PASSWORD: magento
    - MYSQL_ALLOW_EMPTY_PASSWORD: true
  PHP 72 Unit Tests:
    docker:
    - image: circleci/php:7.2-apache
    working_directory: ~/
    steps:
    - attach_workspace:
        at: ~/magento2
    - run:
        name: Run unit tests.
        command: '$MAGENTO_PATH/phpunit-$PHP_UNIT_VERSION.phar -c $MAGENTO_PATH/dev/tests/unit/phpunit.xml '
    environment:
    - PHP_UNIT_VERSION: 6.2
    - SNIFFER_SEVERITY: 10
    - SNIFFER_VERSION: v5
    - MAGENTO_PATH: /home/circleci/magento2
    - MAGENTO_VERSION: 232EE
    - MAGENTO_VERSION_233: 233EE
    - MAGENTO_WEB_SERVER_CONF: https://gist.githubusercontent.com/bcerban/25f3a2d93c19dc562020e0197f78685c/raw/70f1f314ad8ba5d302b911fe622a57ccec60a868/magento2.conf
    - MAGENTO_COMPOSER_AUTH: https://gist.githubusercontent.com/centerax/5e42abec89d62a1308ba/raw/4b3242361c0690e234266afb3520c2940ac1055a/auth.json
    - LIBSODIUM_VERSION: 1.0.18
    - MYSQL_HOST: 127.0.0.1
    - MYSQL_DATABASE: circle_test
    - MYSQL_USER: magento
    - MYSQL_PASSWORD: magento
    - MYSQL_ALLOW_EMPTY_PASSWORD: true
  PHP 72 unit tests with coverage:
    docker:
    - image: circleci/php:7.2-apache
    working_directory: ~/
    steps:
    - attach_workspace:
        at: ~/magento2
    - run:
        name: Run unit tests.
        command: $MAGENTO_PATH/phpunit-$PHP_UNIT_VERSION.phar -c $MAGENTO_PATH/dev/tests/unit/phpunit.xml --coverage-text
    environment:
    - PHP_UNIT_VERSION: 6.2
    - SNIFFER_SEVERITY: 10
    - SNIFFER_VERSION: v5
    - MAGENTO_PATH: /home/circleci/magento2
    - MAGENTO_VERSION: 232EE
    - MAGENTO_VERSION_233: 233EE
    - MAGENTO_WEB_SERVER_CONF: https://gist.githubusercontent.com/bcerban/25f3a2d93c19dc562020e0197f78685c/raw/70f1f314ad8ba5d302b911fe622a57ccec60a868/magento2.conf
    - MAGENTO_COMPOSER_AUTH: https://gist.githubusercontent.com/centerax/5e42abec89d62a1308ba/raw/4b3242361c0690e234266afb3520c2940ac1055a/auth.json
    - LIBSODIUM_VERSION: 1.0.18
    - MYSQL_HOST: 127.0.0.1
    - MYSQL_DATABASE: circle_test
    - MYSQL_USER: magento
    - MYSQL_PASSWORD: magento
    - MYSQL_ALLOW_EMPTY_PASSWORD: true
  PHP 73 unit tests with coverage:
    docker:
    - image: circleci/php:7.3.9-apache-stretch
    working_directory: ~/
    steps:
    - attach_workspace:
        at: ~/magento2
    - run:
        name: Run unit tests.
        command: $MAGENTO_PATH/phpunit-$PHP_UNIT_VERSION.phar -c $MAGENTO_PATH/dev/tests/unit/phpunit.xml --coverage-text
    environment:
    - PHP_UNIT_VERSION: 6.2
    - SNIFFER_SEVERITY: 10
    - SNIFFER_VERSION: v5
    - MAGENTO_PATH: /home/circleci/magento2
    - MAGENTO_VERSION: 232EE
    - MAGENTO_VERSION_233: 233EE
    - MAGENTO_WEB_SERVER_CONF: https://gist.githubusercontent.com/bcerban/25f3a2d93c19dc562020e0197f78685c/raw/70f1f314ad8ba5d302b911fe622a57ccec60a868/magento2.conf
    - MAGENTO_COMPOSER_AUTH: https://gist.githubusercontent.com/centerax/5e42abec89d62a1308ba/raw/4b3242361c0690e234266afb3520c2940ac1055a/auth.json
    - LIBSODIUM_VERSION: 1.0.18
    - MYSQL_HOST: 127.0.0.1
    - MYSQL_DATABASE: circle_test
    - MYSQL_USER: magento
    - MYSQL_PASSWORD: magento
    - MYSQL_ALLOW_EMPTY_PASSWORD: true
workflows:
  version: 2
  build_test_dist:
    jobs:
    - DownloadTools232EE
    - DownloadTools233EE
    - PHP 71 Unit Tests:
        requires:
        - PHP 71 Code Sniffer
    - PHP 71 Code Sniffer:
        requires:
        - DownloadTools232EE
    - PHP 71 Compile and API test:
        requires:
        - PHP 71 Unit Tests
    - PHP 71 unit tests with coverage:
        requires:
        - PHP 71 Compile and API test
    - PHP 72 Unit Tests:
        requires:
        - PHP 72 Code Sniffer
    - PHP 72 Code Sniffer:
        requires:
        - DownloadTools232EE
    - PHP 72 Compile and API test:
        requires:
        - PHP 72 Unit Tests
    - PHP 72 unit tests with coverage:
        requires:
        - PHP 72 Compile and API test
    - PHP 73 Unit Tests:
        requires:
        - PHP 73 Code Sniffer
    - PHP 73 Code Sniffer:
        requires:
        - DownloadTools233EE
    - PHP 73 Compile and API test:
        requires:
        - PHP 73 Unit Tests
    - PHP 73 unit tests with coverage:
        requires:
        - PHP 73 Compile and API test
