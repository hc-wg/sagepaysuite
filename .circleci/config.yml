version: 2.1
executors:
  my-executor:
    docker:
      - image: circleci/php:7.1-apache-node
        environment:
          MYSQL_HOST: 127.0.0.1
          MYSQL_DATABASE: circle_test
          MYSQL_USER: magento
          MYSQL_PASSWORD: magento
          MYSQL_ALLOW_EMPTY_PASSWORD: true
      - image: circleci/mysql:5.6
        environment:
          MYSQL_USER: magento
          MYSQL_PASSWORD: magento
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: circle_test
          MYSQL_ALLOW_EMPTY_PASSWORD: true
    working_directory: ~/

jobs:
    build_mysql_56:
      executor: my-executor
      steps:
        - setup_remote_docker:
            docker_layer_caching: true
        - run: sudo apt-get update || sudo apt-get update
        - run: sudo sh -c 'echo "memory_limit = 1G" > /usr/local/etc/php/conf.d/memory.ini'
        - run: sudo apt-get install -y g++ libicu-dev libjpeg-dev libmcrypt-dev libpng-dev libwebp-dev libxml2-dev libxpm-dev libxslt-dev libz-dev libzip-dev zlib1g-dev
        - run: sudo docker-php-ext-configure intl && sudo docker-php-ext-configure gd --with-png-dir=/usr/include --with-jpeg-dir=/usr/include
        - run: sudo docker-php-ext-install bcmath gd intl mcrypt opcache pdo_mysql soap xsl zip
        - run: sudo apt-get install -y mariadb-client
        - run: echo 127.0.0.1 magento2.dev | sudo tee -a /etc/hosts
        - run: wget https://gist.githubusercontent.com/bcerban/25f3a2d93c19dc562020e0197f78685c/raw/70f1f314ad8ba5d302b911fe622a57ccec60a868/magento2.conf
        - run: sudo cp magento2.conf /etc/apache2/sites-available/ && sudo a2ensite magento2.conf
        - run: sudo sed -i 's/www-data/circleci/g' /etc/apache2/envvars
        - run: sudo service apache2 restart
        - run: wget https://phar.phpunit.de/phpunit-6.2.phar && chmod +x phpunit-6.2.phar
        - run: wget https://ebizmartsbackup.s3.amazonaws.com/Magento226EE-PreCompiled.tar.gz
        - run: tar xpf Magento226EE-PreCompiled.tar.gz
        - run: mv magento2/* .
        - run: mysql -h 127.0.0.1 -umagento -pmagento circle_test < circle_test.sql
        - run: wget https://gist.githubusercontent.com/centerax/5e42abec89d62a1308ba/raw/4b3242361c0690e234266afb3520c2940ac1055a/auth.json
        - run: chmod +x bin/magento
        # Persist the specified paths (workspace/echo-output) into the workspace for use in downstream job.
        - persist_to_workspace:
            # Must be an absolute path, or relative path from working_directory. This is a directory on the container which is
            # taken to be the root directory of the workspace.
            root: /home/circleci
            # Must be relative path from root
            paths:
              - ./

    run_php71:
      executor: my-executor
#        - image: circleci/php:7.1-apache-node
#          environment:
#            MYSQL_HOST: 127.0.0.1
#            MYSQL_DATABASE: circle_test
#            MYSQL_USER: magento
#            MYSQL_PASSWORD: magento
#            MYSQL_ALLOW_EMPTY_PASSWORD: true

#        - image: circleci/mysql:5.6
#          environment:
#            MYSQL_USER: magento
#            MYSQL_PASSWORD: magento
#            MYSQL_ROOT_PASSWORD: root
#            MYSQL_DATABASE: circle_test
#            MYSQL_ALLOW_EMPTY_PASSWORD: true

      steps:
        - attach_workspace:
            at: ~/magento2
#        - run: sudo apt-get update || sudo apt-get update
#        - run: sudo sh -c 'echo "memory_limit = 1G" > /usr/local/etc/php/conf.d/memory.ini'

        # Install dependencies
#        - run:
#           name: Install libraries
#           command: sudo apt-get install -y g++ libicu-dev libjpeg-dev libmcrypt-dev libpng-dev libwebp-dev libxml2-dev libxpm-dev libxslt-dev libz-dev libzip-dev zlib1g-dev
#
#        - run:
#           name: Configure PHP extensions
#           command: sudo docker-php-ext-configure intl && sudo docker-php-ext-configure gd --with-png-dir=/usr/include --with-jpeg-dir=/usr/include
#
#        - run:
#           name: Install PHP extensions
#           command: sudo docker-php-ext-install bcmath gd intl mcrypt opcache pdo_mysql soap xsl zip

#        - run: sudo apt-get install -y mariadb-client

#        # Prepare Apache env
#        - run: echo 127.0.0.1 magento2.dev | sudo tee -a /etc/hosts
#        - run: wget https://gist.githubusercontent.com/bcerban/25f3a2d93c19dc562020e0197f78685c/raw/70f1f314ad8ba5d302b911fe622a57ccec60a868/magento2.conf
#        - run: sudo cp magento2.conf /etc/apache2/sites-available/ && sudo a2ensite magento2.conf
#        - run: sudo sed -i 's/www-data/circleci/g' /etc/apache2/envvars
#        - run: sudo service apache2 restart
#
#        # Install test runners
#        - run: wget https://phar.phpunit.de/phpunit-6.2.phar && chmod +x phpunit-6.2.phar
#
#        # Install Magento
#        - run: wget https://ebizmartsbackup.s3.amazonaws.com/Magento226EE-PreCompiled.tar.gz
#        - run: tar xpf Magento226EE-PreCompiled.tar.gz
#        - run: mv magento2/* .
#        - run: mysql -h 127.0.0.1 -umagento -pmagento circle_test < circle_test.sql
#        - run: wget https://gist.githubusercontent.com/centerax/5e42abec89d62a1308ba/raw/4b3242361c0690e234266afb3520c2940ac1055a/auth.json
#        - run: chmod +x bin/magento

        # Install API
        - checkout:
            path: ~/magento2/app/code/Ebizmarts/SagePaySuite
        - run: mkdir -p ~/magento2/dev/tests/integration/testsuite/Ebizmarts/SagePaySuite/_files && cp -r ~/magento2/app/code/Ebizmarts/SagePaySuite/Test/Api/_files/* ~/magento2/dev/tests/integration/testsuite/Ebizmarts/SagePaySuite/_files
        - run: cp ~/magento2/app/code/Ebizmarts/SagePaySuite/phpunit_config.xml ~/magento2/dev/tests/unit/phpunit.xml
        - run: cp ~/magento2/app/code/Ebizmarts/SagePaySuite/phpunit_config_integration.xml ~/magento2/dev/tests/integration/phpunit.xml
        - run: cp ~/magento2/app/code/Ebizmarts/SagePaySuite/phpunit_config_functional.xml ~/magento2/dev/tests/api-functional/phpunit.xml
        - run: cd ~/magento2/ && bin/magento setup:di:compile
        - run: cd ~/magento2/ && bin/magento setup:upgrade

        # run tests!
        - run: chmod -R 777 ./var
        - run: /home/circleci/magento2/phpunit-6.2.phar -c dev/tests/unit/phpunit.xml --coverage-text
  #      - run: /home/circleci/magento2/phpunit-6.2.phar -c dev/tests/integration/phpunit.xml
        - run: bin/magento cache:flush
        - run: bin/magento cache:disable
        - run: /home/circleci/magento2/phpunit-6.2.phar -c /home/circleci/magento2/dev/tests/api-functional/phpunit.xml

        # Run code checks
        - run: composer require --no-progress --prefer-dist --dev squizlabs/php_codesniffer:3.x-dev magento/magento-coding-standard
        - run: vendor/bin/phpcs --config-set installed_paths ../../magento/magento-coding-standard/
        - run: vendor/bin/phpcs --standard=Magento2,PSR1,PSR2 app/code/Ebizmarts/* --extensions=php,phtml --warning-severity=10 --ignore=".circleci/config.yml,*.xml"

    run_php70:
      docker:
        - image: circleci/php:7.0-apache-node
          environment:
            MYSQL_HOST: 127.0.0.1
            MYSQL_DATABASE: circle_test
            MYSQL_USER: magento
            MYSQL_PASSWORD: magento
            MYSQL_ALLOW_EMPTY_PASSWORD: true

#        - image: circleci/mysql:5.6
#          environment:
#            MYSQL_USER: magento
#            MYSQL_PASSWORD: magento
#            MYSQL_ROOT_PASSWORD: root
#            MYSQL_DATABASE: circle_test
#            MYSQL_ALLOW_EMPTY_PASSWORD: true

      working_directory: ~/magento2

      steps:
        - run: sudo apt-get update || sudo apt-get update
        - run: sudo sh -c 'echo "memory_limit = 1G" > /usr/local/etc/php/conf.d/memory.ini'

        # Install dependencies
        - run:
           name: Install libraries
           command: sudo apt-get install -y g++ libicu-dev libjpeg-dev libmcrypt-dev libpng-dev libwebp-dev libxml2-dev libxpm-dev libxslt-dev libz-dev libzip-dev zlib1g-dev

        - run:
           name: Configure PHP extensions
           command: sudo docker-php-ext-configure intl && sudo docker-php-ext-configure gd --with-png-dir=/usr/include --with-jpeg-dir=/usr/include

        - run:
           name: Install PHP extensions
           command: sudo docker-php-ext-install bcmath gd intl mcrypt opcache pdo_mysql soap xsl zip

#        - run: sudo apt-get install -y mysql-client

        # Prepare Apache env
        - run: echo 127.0.0.1 magento2.dev | sudo tee -a /etc/hosts
        - run: wget https://gist.githubusercontent.com/bcerban/25f3a2d93c19dc562020e0197f78685c/raw/70f1f314ad8ba5d302b911fe622a57ccec60a868/magento2.conf
        - run: sudo cp magento2.conf /etc/apache2/sites-available/ && sudo a2ensite magento2.conf
        - run: sudo sed -i 's/www-data/circleci/g' /etc/apache2/envvars
        - run: sudo service apache2 restart

        # Install test runners
        - run: wget https://phar.phpunit.de/phpunit-6.2.phar && chmod +x phpunit-6.2.phar

        # Install Magento
        - run: wget https://ebizmartsbackup.s3.amazonaws.com/Magento226EE-PreCompiled.tar.gz
        - run: tar xpf Magento226EE-PreCompiled.tar.gz
        - run: mv magento2/* .
        - run: mysql -h 127.0.0.1 -umagento -pmagento circle_test < circle_test.sql
        - run: wget https://gist.githubusercontent.com/centerax/5e42abec89d62a1308ba/raw/4b3242361c0690e234266afb3520c2940ac1055a/auth.json
        - run: chmod +x bin/magento

        # Install API
        - checkout:
            path: ~/magento2/app/code/Ebizmarts/SagePaySuite
        - run: mkdir -p dev/tests/integration/testsuite/Ebizmarts/SagePaySuite/_files && cp -r app/code/Ebizmarts/SagePaySuite/Test/Api/_files/* dev/tests/integration/testsuite/Ebizmarts/SagePaySuite/_files
        - run: cp app/code/Ebizmarts/SagePaySuite/phpunit_config.xml dev/tests/unit/phpunit.xml
        - run: cp app/code/Ebizmarts/SagePaySuite/phpunit_config_integration.xml dev/tests/integration/phpunit.xml
        - run: cp app/code/Ebizmarts/SagePaySuite/phpunit_config_functional.xml dev/tests/api-functional/phpunit.xml
        - run: bin/magento setup:di:compile
        - run: bin/magento setup:upgrade

        # run tests!
        - run: chmod -R 777 ./var
        - run: /home/circleci/magento2/phpunit-6.2.phar -c dev/tests/unit/phpunit.xml --coverage-text
  #      - run: /home/circleci/magento2/phpunit-6.2.phar -c dev/tests/integration/phpunit.xml
        - run: bin/magento cache:flush
        - run: bin/magento cache:disable
        - run: /home/circleci/magento2/phpunit-6.2.phar -c /home/circleci/magento2/dev/tests/api-functional/phpunit.xml

        # Run code checks
        - run: composer require --no-progress --prefer-dist --dev squizlabs/php_codesniffer:3.x-dev magento/magento-coding-standard
        - run: vendor/bin/phpcs --config-set installed_paths ../../magento/magento-coding-standard/
        - run: vendor/bin/phpcs --standard=Magento2,PSR1,PSR2 app/code/Ebizmarts/* --extensions=php,phtml --warning-severity=10 --ignore=".circleci/config.yml,*.xml"

workflows:
  version: 2
  build_test:
    jobs:
      - build_mysql_56
      - run_php70:
          requires:
            - build_mysql_56
      - run_php71:
          requires:
            - build_mysql_56
