version: 2.1

orbs:
  sagepay: pruebas/ebizmarts-sagepay@0.0.4

executors:
  my-executor:
    docker:
      - image: circleci/php:7.1
    environment:
      PHP_UNIT_VERSION: 6.2
      SNIFFER_SEVERITY: 10
      SNIFFER_VERSION: v5
      MAGENTO_PATH: /home/circleci/magento2
      MAGENTO_VERSION: 232EE
      MAGENTO_VERSION_233: 233EE
      MAGENTO_WEB_SERVER_CONF: https://gist.githubusercontent.com/bcerban/25f3a2d93c19dc562020e0197f78685c/raw/70f1f314ad8ba5d302b911fe622a57ccec60a868/magento2.conf
      MAGENTO_COMPOSER_AUTH: https://gist.githubusercontent.com/centerax/5e42abec89d62a1308ba/raw/4b3242361c0690e234266afb3520c2940ac1055a/auth.json
      LIBSODIUM_VERSION: 1.0.18
      MYSQL_HOST: 127.0.0.1
      MYSQL_DATABASE: circle_test
      MYSQL_USER: magento
      MYSQL_PASSWORD: magento
      MYSQL_ALLOW_EMPTY_PASSWORD: true
    working_directory: ~/

jobs:
    DownloadTools232EE:
      executor: my-executor
      steps:
        - sagepay/download-pre-compiled-magento:
            version: $MAGENTO_VERSION
        - sagepay/download-tools:
            version: $MAGENTO_VERSION
        - persist_to_workspace:
            root: /home/circleci
            paths:
              - ./
    DownloadTools233EE:
      executor: my-executor
      steps:
#        - sagepay/download-pre-compiled-magento:
#            version: $MAGENTO_VERSION_233
#        - sagepay/download-tools:
#            version: $MAGENTO_VERSION_233
        - run: wget https://phar.phpunit.de/phpunit-6.2.phar && chmod +x phpunit-6.2.phar
        - run: wget https://ebizmartsbackup.s3.amazonaws.com/Magento-EE-2.3.3.tar.gz && tar xzf Magento-EE-2.3.3.tar.gz
        - run: wget https://gist.githubusercontent.com/centerax/5e42abec89d62a1308ba/raw/4b3242361c0690e234266afb3520c2940ac1055a/auth.json
        - run: chmod +x bin/magento
        - checkout:
            path: app/code/Ebizmarts/SagePaySuite
        - run: mkdir -p dev/tests/integration/testsuite/Ebizmarts/SagePaySuite/_files && cp -r app/code/Ebizmarts/SagePaySuite/Test/Api/_files/* dev/tests/integration/testsuite/Ebizmarts/SagePaySuite/_files
        - run: cp app/code/Ebizmarts/SagePaySuite/phpunit_config.xml dev/tests/unit/phpunit.xml
        - run: cp app/code/Ebizmarts/SagePaySuite/phpunit_config_integration.xml dev/tests/integration/phpunit.xml
        - run: cp app/code/Ebizmarts/SagePaySuite/phpunit_config_functional.xml dev/tests/api-functional/phpunit.xml
        - persist_to_workspace:
            root: /home/circleci
            paths:
              - ./
    PHP 71 Code Sniffer:
      docker:
        - image: circleci/php:7.1-apache
      executor: my-executor
      steps:
        - attach_workspace:
            at: ~/magento2
        - sagepay/run-php-cs
    PHP 71 Unit Tests:
      docker:
        - image: circleci/php:7.1-apache
      executor: my-executor
      steps:
        - attach_workspace:
            at: ~/magento2
        - sagepay/run-php-unit-tests
    PHP 71 Compile and API test:
        docker:
          - image: ebizmarts/magento2-php71:0.0.1
          - image: circleci/mysql:5.6
            environment:
              MYSQL_USER: magento
              MYSQL_PASSWORD: magento
              MYSQL_ROOT_PASSWORD: root
              MYSQL_DATABASE: circle_test
              MYSQL_ALLOW_EMPTY_PASSWORD: true
        executor: my-executor
        steps:
          - attach_workspace:
              at: ~/magento2
          - run: sudo sh -c 'echo "199.188.207.57 test.sagepay.com pi-test.sagepay.com" >> /etc/hosts'
          - sagepay/install-mariadb-and-setup-webserver
          - sagepay/magento-compile-and-setup-upgrade
          - sagepay/run-api-functional-tests
    PHP 71 unit tests with coverage:
      docker:
        - image: circleci/php:7.1-apache
      executor: my-executor
      steps:
        - attach_workspace:
            at: ~/magento2
        - sagepay/run-php-unit-tests:
            coverage: --coverage-text
    PHP 72 Code Sniffer:
      docker:
        - image: circleci/php:7.2-apache
      executor: my-executor
      steps:
        - attach_workspace:
            at: ~/magento2
        - sagepay/run-php-cs
    PHP 72 Unit Tests:
      docker:
        - image: circleci/php:7.2-apache
      executor: my-executor
      steps:
        - attach_workspace:
            at: ~/magento2
        - sagepay/run-php-unit-tests
    PHP 72 Compile and API test:
        docker:
          - image: ebizmarts/magento2-php72:0.0.2
          - image: circleci/mysql:5.6
            environment:
              MYSQL_USER: magento
              MYSQL_PASSWORD: magento
              MYSQL_ROOT_PASSWORD: root
              MYSQL_DATABASE: circle_test
              MYSQL_ALLOW_EMPTY_PASSWORD: true
        executor: my-executor
        steps:
          - attach_workspace:
              at: ~/magento2
          - run: sudo sh -c 'echo "199.188.207.57 test.sagepay.com pi-test.sagepay.com" >> /etc/hosts'
          - sagepay/install-mariadb-and-setup-webserver
          - sagepay/magento-compile-and-setup-upgrade
          - sagepay/run-api-functional-tests
    PHP 72 unit tests with coverage:
      docker:
        - image: circleci/php:7.2-apache
      executor: my-executor
      steps:
        - attach_workspace:
            at: ~/magento2
        - sagepay/run-php-unit-tests:
            coverage: --coverage-text
    PHP 73 Code Sniffer:
      docker:
        - image: circleci/php:7.3.9-apache-stretch
      executor: my-executor
      steps:
        - attach_workspace:
            at: ~/magento2
        - sagepay/run-php-cs
    PHP 73 Unit Tests:
      docker:
        - image: circleci/php:7.3.9-apache-stretch
      executor: my-executor
      steps:
        - attach_workspace:
            at: ~/magento2
        - sagepay/run-php-unit-tests
    PHP 73 Compile and API test:
        docker:
          - image: ebizmarts/magento2-php73:0.0.4
          - image: circleci/mysql:5.6
            environment:
              MYSQL_USER: magento
              MYSQL_PASSWORD: magento
              MYSQL_ROOT_PASSWORD: root
              MYSQL_DATABASE: circle_test
              MYSQL_ALLOW_EMPTY_PASSWORD: true
        executor: my-executor
        steps:
          - attach_workspace:
              at: ~/magento2
          - run: sudo sh -c 'echo "199.188.207.57 test.sagepay.com pi-test.sagepay.com" >> /etc/hosts'
#          - sagepay/install-mariadb-and-setup-webserver
          - run: sudo -E sh -c 'echo "memory_limit = 1G" > /usr/local/etc/php/conf.d/memory.ini'

          - run: wget https://download.libsodium.org/libsodium/releases/libsodium-1.0.18.tar.gz
          - run: tar xvzf libsodium-1.0.18.tar.gz
          - run: cd libsodium-1.0.18/ && ./configure
          - run: cd libsodium-1.0.18/ && make && make check
          - run: cd libsodium-1.0.18/ && sudo make install

          # Install dependencies
          - run: sudo apt-get update
          - run:
              name: Install libraries
              command: sudo -E apt-get install -y g++ libicu-dev libjpeg-dev libmcrypt-dev libpng-dev libwebp-dev libxml2-dev libxpm-dev libxslt-dev libz-dev libzip-dev zlib1g-dev

          - run:
              name: Configure PHP extensions
              command: sudo -E docker-php-ext-configure intl && sudo -E docker-php-ext-configure gd --with-png-dir=/usr/include --with-jpeg-dir=/usr/include

          - run: sudo apt-get -y install gcc make autoconf libc-dev pkg-config
          - run: sudo apt-get -y install libmcrypt-dev
          - run: sudo pecl install mcrypt-1.0.2

          - run:
              name: Install PHP extensions
              command: sudo -E docker-php-ext-install bcmath gd intl opcache pdo_mysql soap xsl zip

          - run: sudo apt-get install -y mariadb-client

          # Prepare Apache env
          - run: echo 127.0.0.1 magento2.dev | sudo tee -a /etc/hosts
          - run: wget https://gist.githubusercontent.com/bcerban/25f3a2d93c19dc562020e0197f78685c/raw/70f1f314ad8ba5d302b911fe622a57ccec60a868/magento2.conf
          - run: sudo cp magento2.conf /etc/apache2/sites-available/ && sudo a2ensite magento2.conf
          - run: sudo sed -i 's/www-data/circleci/g' /etc/apache2/envvars
          - run: sudo service apache2 restart

          # Install test runners
          - run: cd ~/magento2 && composer install --prefer-source --no-interaction
          - run: cd ~/magento2 && bin/magento setup:install --base-url=http://magento2.dev:8080/ --db-host=127.0.0.1 --db-name=circle_test --db-user=magento --db-password=magento --admin-firstname=Magento --admin-lastname=User --admin-email=user@example.com --admin-user=admin --admin-password=admin123 --language=en_US --currency=USD --timezone=America/Chicago --use-rewrites=1 --cleanup-database --use-sample-data

          - sagepay/magento-compile-and-setup-upgrade
          - sagepay/run-api-functional-tests
    PHP 73 unit tests with coverage:
      docker:
        - image: circleci/php:7.3.9-apache-stretch
      executor: my-executor
      steps:
        - attach_workspace:
            at: ~/magento2
        - sagepay/run-php-unit-tests:
            coverage: --coverage-text

workflows:
  version: 2.1
  build_test_dist:
    jobs:
      - DownloadTools232EE
      - DownloadTools233EE
      - PHP 71 Unit Tests:
          requires:
            - PHP 71 Code Sniffer
      - PHP 71 Code Sniffer:
          requires:
            - DownloadTools232EE
      - PHP 71 Compile and API test:
          requires:
            - PHP 71 Unit Tests
      - PHP 71 unit tests with coverage:
          requires:
            - PHP 71 Compile and API test
      - PHP 72 Unit Tests:
          requires:
            - PHP 72 Code Sniffer
      - PHP 72 Code Sniffer:
          requires:
            - DownloadTools232EE
      - PHP 72 Compile and API test:
          requires:
            - PHP 72 Unit Tests
      - PHP 72 unit tests with coverage:
          requires:
            - PHP 72 Compile and API test
      - PHP 73 Unit Tests:
          requires:
            - PHP 73 Code Sniffer
      - PHP 73 Code Sniffer:
          requires:
            - DownloadTools233EE
      - PHP 73 Compile and API test:
          requires:
            - PHP 73 Unit Tests
      - PHP 73 unit tests with coverage:
          requires:
            - PHP 73 Compile and API test
