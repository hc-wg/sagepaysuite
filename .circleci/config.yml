version: 2

#executors:
#  my-executor:
#    docker:
#      - image: circleci/php:7.0
#    environment:
#      PHP_UNIT_VERSION: 4.8
#      SNIFFER_SEVERITY: 10
#      SNIFFER_VERSION: v5
#      MAGENTO_PATH: /home/circleci/magento2
#      MAGENTO_VERSION: 216
#      MAGENTO_WEB_SERVER_CONF: https://gist.githubusercontent.com/bcerban/25f3a2d93c19dc562020e0197f78685c/raw/70f1f314ad8ba5d302b911fe622a57ccec60a868/magento2.conf
#      MAGENTO_COMPOSER_AUTH: https://gist.githubusercontent.com/centerax/5e42abec89d62a1308ba/raw/4b3242361c0690e234266afb3520c2940ac1055a/auth.json
#    working_directory: ~/

#jobs:
#  DownloadTools216:
#    executor: my-executor
#    steps:
#      - download-pre-compiled-magento:
#          version: $MAGENTO_VERSION
#      - download-tools:
#          version: $MAGENTO_VERSION
#      - persist_to_workspace:
#          root: /home/circleci
#          paths:
#            - ./
#    PHP 70 Code Sniffer:
#      docker:
#        - image: circleci/php:7.0-apache
#      executor: my-executor
#      steps:
#        - attach_workspace:
#            at: ~/magento2
#        - run-php-cs
#    PHP 70 Unit Tests:
#      docker:
#        - image: circleci/php:7.0-apache
#      executor: my-executor
#      steps:
#        - attach_workspace:
#            at: ~/magento2
#        - run-php-unit-tests
#    PHP 70 Compile and API test:
#      docker:
#        - image: circleci/php:7.0-apache
#        - image: circleci/mysql:5.6
#          environment:
#            MYSQL_USER: magento
#            MYSQL_PASSWORD: magento
#            MYSQL_ROOT_PASSWORD: root
#            MYSQL_DATABASE: circle_test
#            MYSQL_ALLOW_EMPTY_PASSWORD: true
#      executor: my-executor
#      steps:
#        - attach_workspace:
#            at: ~/magento2
#        - install-linux-dependencies
#        - magento-compile-and-setup-upgrade
#        - run-api-functional-tests
#    PHP 70 unit tests with coverage:
#      docker:
#        - image: circleci/php:7.0-apache
#      executor: my-executor
#      steps:
#        - attach_workspace:
#            at: ~/magento2
#        - run-php-unit-tests:
#            coverage: --coverage-text
#    PHP 56 Code Sniffer:
#      docker:
#        - image: circleci/php:5.6-apache
#      executor: my-executor
#      steps:
#        - attach_workspace:
#            at: ~/magento2
#        - run-php-cs
#    PHP 56 Unit Tests:
#      docker:
#        - image: circleci/php:5.6-apache
#      executor: my-executor
#      steps:
#        - attach_workspace:
#            at: ~/magento2
#        - run-php-unit-tests
#    PHP 56 Compile and API test:
#      docker:
#        - image: circleci/php:5.6-apache
#        - image: circleci/mysql:5.6
#          environment:
#            MYSQL_USER: magento
#            MYSQL_PASSWORD: magento
#            MYSQL_ROOT_PASSWORD: root
#            MYSQL_DATABASE: circle_test
#            MYSQL_ALLOW_EMPTY_PASSWORD: true
#      executor: my-executor
#      steps:
#        - attach_workspace:
#            at: ~/magento2
#        - install-linux-dependencies
#        - magento-compile-and-setup-upgrade
#        - run-api-functional-tests
#    PHP 56 unit tests with coverage:
#      docker:
#        - image: circleci/php:5.6-apache
#      executor: my-executor
#      steps:
#        - attach_workspace:
#            at: ~/magento2
#        - run-php-unit-tests:
#            coverage: --coverage-text

jobs:
  run_php70:
    docker:
      - image: circleci/php:7.0-apache-node
        environment:
          MYSQL_HOST: 127.0.0.1
          MYSQL_DATABASE: circle_test
          MYSQL_USER: magento
          MYSQL_PASSWORD: magento
          MYSQL_ALLOW_EMPTY_PASSWORD: true

      - image: circleci/mysql:5.6
        environment:
          MYSQL_USER: magento
          MYSQL_PASSWORD: magento
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: circle_test
          MYSQL_ALLOW_EMPTY_PASSWORD: true

    working_directory: ~/magento2

    steps:
      - run: sudo sh -c 'echo "memory_limit = 1G" > /usr/local/etc/php/conf.d/memory.ini'

      # Install dependencies
      - run: sudo apt-get update
      - run:
          name: Install libraries
          command: sudo apt-get install -y g++ libicu-dev libjpeg-dev libmcrypt-dev libpng-dev libwebp-dev libxml2-dev libxpm-dev libxslt-dev libz-dev libzip-dev zlib1g-dev

      - run:
          name: Configure PHP extensions
          command: sudo docker-php-ext-configure intl && sudo docker-php-ext-configure gd --with-png-dir=/usr/include --with-jpeg-dir=/usr/include

      - run:
          name: Install PHP extensions
          command: sudo docker-php-ext-install bcmath gd intl mcrypt opcache pdo_mysql soap xsl zip

      - run: sudo apt-get install -y mysql-client

      # Prepare Apache env
      - run: echo 127.0.0.1 magento2.dev | sudo tee -a /etc/hosts
      - run: wget https://gist.githubusercontent.com/bcerban/25f3a2d93c19dc562020e0197f78685c/raw/70f1f314ad8ba5d302b911fe622a57ccec60a868/magento2.conf
      - run: sudo cp magento2.conf /etc/apache2/sites-available/ && sudo a2ensite magento2.conf
      - run: sudo sed -i 's/www-data/circleci/g' /etc/apache2/envvars
      - run: sudo cat /etc/apache2/envvars
      - run: sudo service apache2 restart

      # Install test runners
      - run: wget https://phar.phpunit.de/phpunit-4.8.phar && chmod +x phpunit-4.8.phar

      # Install Magento
      - run: wget https://ebizmartsbackup.s3.amazonaws.com/Magento216-PreCompiled.tar.gz
      - run: tar xpf Magento216-PreCompiled.tar.gz
      - run: mv magento2/* .
      - run: mysql -h 127.0.0.1 -umagento -pmagento circle_test < circle_test.sql
      - run: chmod +x bin/magento

      # Install API
      - checkout:
          path: ~/magento2/app/code/Ebizmarts/SagePaySuite
      - run: mkdir -p dev/tests/integration/testsuite/Ebizmarts/SagePaySuite/_files && cp -r app/code/Ebizmarts/SagePaySuite/Test/Api/_files/* dev/tests/integration/testsuite/Ebizmarts/SagePaySuite/_files
      - run: cp app/code/Ebizmarts/SagePaySuite/phpunit_config.xml dev/tests/unit/phpunit.xml
      - run: cp app/code/Ebizmarts/SagePaySuite/phpunit_config_functional.xml dev/tests/api-functional/phpunit.xml
      - run: bin/magento setup:di:compile
      - run: bin/magento setup:upgrade
      - run: bin/magento setup:di:compile

      # run tests!
      - run: chmod -R 777 ./var
      - run: /home/circleci/magento2/phpunit-4.8.phar -c dev/tests/unit/phpunit.xml --coverage-text
      - run: /home/circleci/magento2/phpunit-4.8.phar -c /home/circleci/magento2/dev/tests/api-functional/phpunit.xml

      # Run code checks
      - run: composer require --dev squizlabs/php_codesniffer:3.x-dev magento/magento-coding-standard
      - run: chmod +x vendor/bin/phpcs
      - run: vendor/bin/phpcs --config-set installed_paths ../../magento/magento-coding-standard/
      - run: vendor/bin/phpcs --standard=Magento2,PSR1,PSR2 app/code/Ebizmarts/* --extensions=php,phtml --warning-severity=10 --ignore=".circleci/config.yml,*.xml"

  run_php56:
    docker:
      - image: circleci/php:5.6-apache-node
        environment:
          MYSQL_HOST: 127.0.0.1
          MYSQL_DATABASE: circle_test
          MYSQL_USER: magento
          MYSQL_PASSWORD: magento
          MYSQL_ALLOW_EMPTY_PASSWORD: true

      - image: circleci/mysql:5.6
        environment:
          MYSQL_USER: magento
          MYSQL_PASSWORD: magento
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: circle_test
          MYSQL_ALLOW_EMPTY_PASSWORD: true

    working_directory: ~/magento2

    steps:
      - run: sudo sh -c 'echo "memory_limit = 2G" > /usr/local/etc/php/conf.d/memory.ini'

      # Install dependencies
      - run: sudo apt-get update
      - run:
          name: Install libraries
          command: sudo apt-get install -y g++ libicu-dev libjpeg-dev libmcrypt-dev libpng-dev libwebp-dev libxml2-dev libxpm-dev libxslt-dev libz-dev libzip-dev zlib1g-dev

      - run:
          name: Configure PHP extensions
          command: sudo docker-php-ext-configure intl && sudo docker-php-ext-configure gd --with-png-dir=/usr/include --with-jpeg-dir=/usr/include

      - run:
          name: Install PHP extensions
          command: sudo docker-php-ext-install bcmath gd intl mcrypt opcache pdo_mysql soap xsl zip

      - run: sudo apt-get install -y mysql-client

      # Prepare Apache env
      - run: echo 127.0.0.1 magento2.dev | sudo tee -a /etc/hosts
      - run: wget https://gist.githubusercontent.com/bcerban/25f3a2d93c19dc562020e0197f78685c/raw/70f1f314ad8ba5d302b911fe622a57ccec60a868/magento2.conf
      - run: sudo cp magento2.conf /etc/apache2/sites-available/ && sudo a2ensite magento2.conf
      - run: sudo sed -i 's/www-data/circleci/g' /etc/apache2/envvars
      - run: sudo cat /etc/apache2/envvars
      - run: sudo service apache2 restart

      # Install test runners
      - run: wget https://phar.phpunit.de/phpunit-4.8.phar && chmod +x phpunit-4.8.phar

      # Install Magento
      - run: wget https://ebizmartsbackup.s3.amazonaws.com/Magento216-PreCompiled.tar.gz
      - run: tar xpf Magento216-PreCompiled.tar.gz
      - run: mv magento2/* .
      - run: mysql -h 127.0.0.1 -umagento -pmagento circle_test < circle_test.sql
      - run: chmod +x bin/magento

      # Install API
      - checkout:
          path: ~/magento2/app/code/Ebizmarts/SagePaySuite
      - run: mkdir -p dev/tests/integration/testsuite/Ebizmarts/SagePaySuite/_files && cp -rf app/code/Ebizmarts/SagePaySuite/Test/Api/_files/* dev/tests/integration/testsuite/Ebizmarts/SagePaySuite/_files
      - run: cp app/code/Ebizmarts/SagePaySuite/phpunit_config.xml dev/tests/unit/phpunit.xml
      - run: cp app/code/Ebizmarts/SagePaySuite/phpunit_config_functional.xml dev/tests/api-functional/phpunit.xml
      - run: bin/magento setup:di:compile
      - run: bin/magento setup:upgrade
      - run: bin/magento setup:di:compile

      # run tests!
      - run: chmod -R 777 ./var
      - run: /home/circleci/magento2/phpunit-4.8.phar -c dev/tests/unit/phpunit.xml --coverage-text
      - run: /home/circleci/magento2/phpunit-4.8.phar -c /home/circleci/magento2/dev/tests/api-functional/phpunit.xml

      # Run code checks
      - run: composer require --dev squizlabs/php_codesniffer:3.x-dev magento/magento-coding-standard
      - run: chmod +x vendor/bin/phpcs
      - run: vendor/bin/phpcs --config-set installed_paths ../../magento/magento-coding-standard/
      - run: vendor/bin/phpcs --standard=Magento2,PSR1,PSR2 app/code/Ebizmarts/* --extensions=php,phtml --warning-severity=10 --ignore=".circleci/config.yml,*.xml"

workflows:
  version: 2
  build_test_dist:
    jobs:
      - run_php56
      - run_php70
#      - DownloadTools216
#      - PHP 70 Code Sniffer:
#          requires:
#            - DownloadTools216
#      - PHP 70 Unit Tests:
#          requires:
#            - PHP 70 Code Sniffer
#      - PHP 70 Compile and API test:
#          requires:
#            - PHP 70 Unit Tests
#      - PHP 70 unit tests with coverage:
#          requires:
#            - PHP 70 Compile and API test
#      - PHP 56 Code Sniffer:
#          requires:
#            - DownloadTools216
#      - PHP 56 Unit Tests:
#          requires:
#            - PHP 70 Code Sniffer
#      - PHP 56 Compile and API test:
#          requires:
#            - PHP 70 Unit Tests
#      - PHP 56 unit tests with coverage:
#          requires:
#            - PHP 70 Compile and API test