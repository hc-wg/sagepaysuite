version: 2.1

orbs:
  sagepay: pruebas/ebizmarts-sagepay@0.0.2

executors:
  my-executor:
    docker:
      - image: circleci/php:7.0
    environment:
      PHP_UNIT_VERSION: 4.8
      SNIFFER_SEVERITY: 10
      SNIFFER_VERSION: v5
      MAGENTO_PATH: /home/circleci/magento2
      MAGENTO_VERSION: 216
      MAGENTO_WEB_SERVER_CONF: https://gist.githubusercontent.com/bcerban/25f3a2d93c19dc562020e0197f78685c/raw/70f1f314ad8ba5d302b911fe622a57ccec60a868/magento2.conf
      MAGENTO_COMPOSER_AUTH: https://gist.githubusercontent.com/centerax/5e42abec89d62a1308ba/raw/4b3242361c0690e234266afb3520c2940ac1055a/auth.json
    working_directory: ~/

jobs:
    DownloadTools216:
      executor: my-executor
      steps:
        - sagepay/download-pre-compiled-magento:
            version: $MAGENTO_VERSION
        - sagepay/download-tools:
            version: $MAGENTO_VERSION
        - persist_to_workspace:
            root: /home/circleci
            paths:
              - ./
    PHP 70 Code Sniffer:
      docker:
        - image: circleci/php:7.0-apache
      executor: my-executor
      steps:
        - attach_workspace:
            at: ~/magento2
        - sagepay/run-php-cs
    PHP 70 Unit Tests:
      docker:
        - image: circleci/php:7.0-apache
      executor: my-executor
      steps:
        - attach_workspace:
            at: ~/magento2
        - sagepay/run-php-unit-tests
    PHP 70 Compile and API test:
      docker:
        - image: ebizmarts/magento2-php70:0.0.1
        - image: circleci/mysql:5.6
          environment:
            MYSQL_USER: magento
            MYSQL_PASSWORD: magento
            MYSQL_ROOT_PASSWORD: root
            MYSQL_DATABASE: circle_test
            MYSQL_ALLOW_EMPTY_PASSWORD: true
      executor: my-executor
      steps:
        - attach_workspace:
            at: ~/magento2
        - sagepay/install-mariadb-and-setup-webserver
        - sagepay/magento-compile-and-setup-upgrade
        - sagepay/run-api-functional-tests
    PHP 70 unit tests with coverage:
      docker:
        - image: circleci/php:7.0-apache
      executor: my-executor
      steps:
        - attach_workspace:
            at: ~/magento2
        - sagepay/run-php-unit-tests:
            coverage: --coverage-text
    PHP 56 Code Sniffer:
      docker:
        - image: circleci/php:5.6-apache
      executor: my-executor
      steps:
        - attach_workspace:
            at: ~/magento2
        - sagepay/run-php-cs
    PHP 56 Unit Tests:
      docker:
        - image: circleci/php:5.6-apache
      executor: my-executor
      steps:
        - attach_workspace:
            at: ~/magento2
        - sagepay/run-php-unit-tests
    PHP 56 Compile and API test:
      docker:
        - image: circleci/php:5.6-apache
        - image: circleci/mysql:5.6
          environment:
            MYSQL_USER: magento
            MYSQL_PASSWORD: magento
            MYSQL_ROOT_PASSWORD: root
            MYSQL_DATABASE: circle_test
            MYSQL_ALLOW_EMPTY_PASSWORD: true
      executor: my-executor
      steps:
        - attach_workspace:
            at: ~/magento2
        - sagepay/install-linux-dependencies
        - sagepay/magento-compile-and-setup-upgrade
        - sagepay/run-api-functional-tests
    PHP 56 unit tests with coverage:
      docker:
        - image: circleci/php:5.6-apache
      executor: my-executor
      steps:
        - attach_workspace:
            at: ~/magento2
        - sagepay/run-php-unit-tests:
            coverage: --coverage-text
workflows:
  version: 2.1
  build_test_dist:
    jobs:
      - DownloadTools216
      - PHP 70 Code Sniffer:
          requires:
            - DownloadTools216
      - PHP 70 Unit Tests:
          requires:
            - PHP 70 Code Sniffer
      - PHP 70 Compile and API test:
          requires:
            - PHP 70 Unit Tests
      - PHP 70 unit tests with coverage:
          requires:
            - PHP 70 Compile and API test
      - PHP 56 Code Sniffer:
          requires:
            - DownloadTools216
      - PHP 56 Unit Tests:
          requires:
            - PHP 70 Code Sniffer
      - PHP 56 Compile and API test:
          requires:
            - PHP 70 Unit Tests
      - PHP 56 unit tests with coverage:
          requires:
            - PHP 70 Compile and API test